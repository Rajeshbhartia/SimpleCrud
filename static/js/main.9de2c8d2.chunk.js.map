{"version":3,"sources":["resources/product.jpg","Products.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","product","width","float","margin","spacing","media","height","paddingTop","backgroundColor","button","title","fontWeight","quantity","fontSize","price","cart","paper","position","cContainer","justifyContent","padding","delWra","alignContent","drawLine","atcWrapper","alignItems","atcBtnWra","bottom","left","marginRight","Products","props","classes","className","proWrapper","console","log","proData","Object","entries","map","index","key","value","cartButton","addToCartData","forEach","i","atcKey","Card","IconButton","aria-label","CardMedia","image","productImage","CardContent","Typography","variant","color","onClick","onQuery","Paper","elevation","children","cWrapper","size","Button","App","state","action","a","fetch","method","headers","body","JSON","stringify","args","resp","json","setState","proResp","addToCartResp","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9de2c8d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/product.8eab0a0e.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport productImage from \"./resources/product.jpg\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CloseIcon from \"@material-ui/icons/CloseRounded\";\r\nimport DoneIcon from \"@material-ui/icons/Check\"\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    product: {\r\n        width: \"250px\",\r\n        float: \"left\",\r\n        margin: theme.spacing(2),\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        backgroundColor: \"gray\"\r\n    },\r\n    button: {\r\n        float: \"right\"\r\n    },\r\n    title: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    quantity: {\r\n        fontSize: \"0.6em\"\r\n    },\r\n    price: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    cart: {\r\n        '& > *': {\r\n            margin: theme.spacing(2),\r\n            width: \"300px\",\r\n            height: \"500px\",\r\n        },\r\n    },\r\n    paper: {\r\n        position: \"relative\",\r\n    },\r\n    cContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        padding: theme.spacing(1),\r\n        \"& span\": {\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\"\r\n        }\r\n    },\r\n    delWra: {\r\n        display: \"flex\",\r\n        alignContent: \"center\"\r\n    },\r\n    drawLine: {\r\n        height: \"1px\",\r\n        width: \"100%\",\r\n        backgroundColor: \"#d6d6d6\"\r\n    },\r\n\r\n    atcWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        padding: theme.spacing(1),\r\n    },\r\n    atcBtnWra: {\r\n        position: \"absolute\",\r\n        bottom: theme.spacing(1),\r\n        left: theme.spacing(1),\r\n        \"& button\": {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Products(props) {\r\n    const classes = useStyles();\r\n\r\n    const generateProductList = () => {\r\n        console.log(props.proData)\r\n        if (props && props.proData) {\r\n\r\n            return Object.entries(props.proData).map(([key, value], index) => {\r\n                let cartButton = <AddShoppingCart />\r\n                Object.entries(props.addToCartData).forEach(([atcKey, atcValue], i) => {\r\n                    if (atcKey === key) {\r\n                        cartButton = <DoneIcon />\r\n                    }\r\n                })\r\n                return (\r\n                    <Card className={classes.product} key={index}>\r\n                        <IconButton aria-label=\"add to favorites\" className={classes.button}>\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={productImage}\r\n                            title=\"Paella dish\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" className={classes.title}>\r\n                                {value.title}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" className={classes.quantity}>\r\n                                Quantity: {value.quantity}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" className={classes.price}>\r\n                                ${value.price}\r\n                            </Typography>\r\n                        </CardContent>\r\n\r\n                        <IconButton aria-label=\"share\" className={classes.button} onClick={() => props.onQuery(key, value, \"add\")}>\r\n                            {cartButton}\r\n                        </IconButton>\r\n\r\n                    </Card>\r\n                )\r\n            })\r\n\r\n        }\r\n        else return null\r\n    }\r\n\r\n    const getChatContent = () => {\r\n        let calcutaledTotal = 500\r\n        return (\r\n            <div className={classes.cWrapper}>\r\n                <div className={classes.cContainer}>\r\n                    <span>\r\n                        Your Cart\r\n                    </span>\r\n                    <div className={classes.delWra}>\r\n                        <DeleteIcon />\r\n                        clear\r\n                    </div>\r\n                </div>\r\n                <div className={classes.drawLine} />\r\n                {Object.entries(props.addToCartData).map(([key, value], index) => {\r\n                    return (\r\n                        <div key={index} className={classes.atcWrapper}>\r\n                            <span>\r\n                                {value.title}\r\n                            </span>\r\n                            <span>\r\n                                {value.quantity}\r\n                            </span>\r\n                            <span>\r\n                                {value.price}\r\n                            </span>\r\n                            <IconButton aria-label=\"add to favorites\" className={classes.button} size=\"small\" onClick={() => props.onQuery(key, value, \"delete\")}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <div className={classes.atcBtnWra}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Place Order\r\n                    </Button>\r\n                    <span>\r\n                        GrandTotol ${calcutaledTotal}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    const genrateCart = () => {\r\n        return (\r\n            <div className={classes.cart}>\r\n                <Paper elevation={3} children={getChatContent()} className={classes.paper} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.proWrapper}>\r\n                {generateProductList()}\r\n            </div>\r\n            {genrateCart()}\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\nimport Products from \"./Products\"\n\nclass App extends Component {\n  state = {\n    proData: {},\n    addToCartData: {}\n  }\n  async componentDidMount() {\n    const productUrl = \"http://localhost:3010/product\";\n    const proResp = await fetch(productUrl)\n    const proData = await proResp.json()\n\n    const addToCartUrl = \"http://localhost:3010/addtocart\";\n    const addToCartResp = await fetch(addToCartUrl)\n    let addToCartData = await addToCartResp.json()\n\n    this.setState({ proData, addToCartData })\n  }\n\n  onQuery = async (key, value, action) => {\n    const url = \"http://localhost:3010/addtocart\";\n    const resp = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ args: { [key]: value }, action: action })\n    })\n    let addToCartData = await resp.json()\n    console.log(addToCartData)\n    this.setState({ addToCartData })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Products proData={this.state.proData} addToCartData={this.state.addToCartData} onQuery={this.onQuery} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}